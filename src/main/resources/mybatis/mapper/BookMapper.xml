<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ru.romanov.booktracker.repository.interfaces.BookRepository">

    <resultMap id="BookResultMap" type="ru.romanov.booktracker.domain.book.Book" autoMapping="false">
        <id property="id" column="book_id"/>
        <result property="title" column="book_title"/>
        <result property="author" column="book_author"/>
        <result property="description" column="book_description"/>
        <result property="status" column="book_read_status"/>
        <result property="expirationDateToRead" column="book_date_to_read"/>
    </resultMap>

    <select id="findById" resultMap="BookResultMap">
        SELECT b.id as book_id,
        b.title as book_title,
        b.author as book_author,
        b.description as book_description,
        b.expiration_date_to_read as book_date_to_read,
        b.status as book_read_status
        FROM books b
        WHERE id = #{id}
    </select>

    <select id="findAllByUserId" resultMap="BookResultMap">
        SELECT b.id as book_id,
        b.title as book_title,
        b.author as book_author,
        b.description as book_description,
        b.expiration_date_to_read as book_date_to_read,
        b.status as book_read_status
        FROM books b
        JOIN users_books ub on b.id = ub.book_id
        WHERE ub.user_id = #{userId}
    </select>

    <insert id="create" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO books(title, author, description, status, expiration_date_to_read)
        VALUES (#{title}, #{author}, #{description}, #{status}, #{expirationDateToRead})
    </insert>

    <insert id="assignToUserById">
        INSERT INTO users_books (book_id, user_id)
        VALUES (#{bookId}, #{userId})
    </insert>

    <update id="update">
        UPDATE books
        SET title = #{title},
        author = #{author},
        description = #{description},
        status = #{status},
        expiration_date_to_read = #{expirationDateToRead}
        WHERE id = #{id}
    </update>

    <delete id="delete">
        DELETE FROM books
        WHERE id = #{id}
    </delete>

</mapper>