<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ru.romanov.booktracker.repository.interfaces.UserRepository">

    <resultMap id="UserResultMap" type="ru.romanov.booktracker.domain.user.User" autoMapping="false">
        <id property="id" column="user_id"/>
        <result property="name" column="user_name"/>
        <result property="username" column="user_username"/>
        <result property="password" column="user_password"/>
        <collection property="roles"
                    ofType="ru.romanov.booktracker.domain.user.Role"
                    autoMapping="false">
            <result property="name" column="user_role"/>
        </collection>
        <collection property="books"
                    ofType="ru.romanov.booktracker.domain.book.Book"
                    resultMap="ru.romanov.booktracker.repository.interfaces.BookRepository.BookResultMap"
                    autoMapping="false"/>
    </resultMap>

    <select id="findById" resultMap="UserResultMap">
        SELECT u.id as user_id,
        u.name as user_name,
        u.username as user_username,
        u.password as user_password,
        ur.role as user_role,
        b.id as book_id,
        b.author as book_author,
        b.title as book_title,
        b.description as book_description,
        b.status as book_read_status,
        b.expiration_date_to_read as book_date_to_read
        FROM users u
        LEFT JOIN users_roles ur ON u.id = ur.user_id
        LEFT JOIN users_books ub ON u.id = ub.user_id
        LEFT JOIN books b ON ub.book_id = b.id
        WHERE u.id = #{id}
    </select>

    <select id="findByUsername" resultMap="UserResultMap">
        SELECT u.id as user_id,
        u.name as user_name,
        u.username as user_username,
        u.password as user_password,
        ur.role as user_role,
        b.id as book_id,
        b.author as book_author,
        b.title as book_title,
        b.description as book_description,
        b.status as book_read_status,
        b.expiration_date_to_read as book_date_to_read
        FROM users u
        LEFT JOIN users_roles ur ON u.id = ur.user_id
        LEFT JOIN users_books ub ON u.id = ub.user_id
        LEFT JOIN books b ON ub.book_id = b.id
        WHERE username = #{username}
    </select>

    <select id="isBookOwner" resultType="boolean">
        SELECT exists(
        SELECT 1
        FROM users_books
        WHERE user_id = #{userId}
        AND book_id = #{bookId}
        )
    </select>

    <update id="update">
        UPDATE users
        SET name = #{name},
        username = #{username},
        password = #{password}
        WHERE id = #{id}
    </update>

    <insert id="create" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO users(name, username, password)
        VALUES (#{name}, #{username}, #{password})
    </insert>

    <insert id="insertUserRole">
        INSERT INTO users_roles(user_id, role)
        VALUES (#{userId}, #{role})
    </insert>

    <delete id="delete">
        DELETE FROM users
        WHERE id = #{id}
    </delete>

</mapper>